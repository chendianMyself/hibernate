### direct log messages to stdout ###
#
#    %n - 换行  
#    %m - 日志内容     
#    %p - 日志级别(FATAL,   ERROR,   WARN,   INFO,   DEBUG   or   custom)      
#    %r - 程序启动到现在的毫秒数   
#    %% - percent   sign   in   output  
#    %t - 当前线程名  
#    %d - 日期和时间,   
#         常用的格式有 %d{DATE}, %d{ABSOLUTE}, %d{HH:mm:ss,SSS}, %d{ddMMyyyy HH:mm:ss,SSS}。。。  
#    
#    %F - java源文件名  
#    %L - java源码行数  
#    %c - java类名,%C{1} 输出最后一个元素  
#    %M - java方法名  
#	 %l - 同 %F%L%C%M  
#
#	ConsoleAppender  输出控制台
#	FileAppender	输出文件
#	RollingFileAppender	滚动文件,需要设置maxFileSize
#
#
#
#


log4j.appender.abcd=org.apache.log4j.ConsoleAppender
log4j.appender.abcd.Target=System.out
log4j.appender.abcd.layout=org.apache.log4j.PatternLayout
#log4j.appender.abcd.layout.ConversionPattern=%d{ABSOLUTE} %5p %c:%M:%L - %m%n
#%-5p表示日志级别占5个字符,左对齐,如果是%5p表示右对齐
#$d表示时间,通过{yyyMMdd}使用标准日期正则设置日期时间的格式
log4j.appender.abcd.layout.ConversionPattern=[%-5p] [%d{yyyy-MM-dd HH:mm:ss}] %c:%L - %m%n



#输出到文件
log4j.appender.file=org.apache.log4j.FileAppender
#文件地址
log4j.appender.file.File=d:/logFile.log
#日志格式
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{2}:%L - %m%n


#滚动文件,主日志文件大小有限制
log4j.appender.rollingFile=org.apache.log4j.RollingFileAppender
log4j.appender.rollingFile.File=d:/rollingFile.log
log4j.appender.rollingFile.maxFileSize=2KB
log4j.appender.rollingFile.layout=org.apache.log4j.PatternLayout
log4j.appender.rollingFile.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n



### set log levels - for more verbose logging change 'info' to 'debug' ###
log4j.rootLogger=info, abcd,file,rollingFile

#log4j.logger.org.hibernate.jpamodelgen.test.util.CompilationTest=trace

